name: Integration Tests

on:
  # Run on every push to main and PRs
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  
  # Run after deployment (can be triggered manually or by deployment workflows)
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test (dev or prod)'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

  # Run on schedule to catch issues early
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'

jobs:
  integration-tests-dev:
    name: Integration Tests (Dev)
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == 'dev'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx
    
    - name: Run integration tests against dev environment
      env:
        HGC_API_URL_DEV: ${{ secrets.HGC_API_URL_DEV }}
        HGC_API_KEY_DEV: ${{ secrets.HGC_API_KEY_DEV }}
      run: |
        python -m pytest tests/test_integration.py::test_dev_environment -v
    
    - name: Report test results
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "‚úÖ Dev integration tests passed"
        else
          echo "‚ùå Dev integration tests failed"
          exit 1
        fi

  integration-tests-prod:
    name: Integration Tests (Prod - Read Only)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest httpx
    
    - name: Run read-only integration tests against prod environment
      env:
        HGC_API_URL_PROD: ${{ secrets.HGC_API_URL_PROD }}
        HGC_API_KEY_PROD: ${{ secrets.HGC_API_KEY_PROD }}
      run: |
        python -m pytest tests/test_integration.py::test_prod_environment -v
    
    - name: Report test results
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "‚úÖ Prod integration tests passed"
        else
          echo "‚ùå Prod integration tests failed"
          exit 1
        fi

  post-deployment-smoke-test:
    name: Post-Deployment Smoke Test
    runs-on: ubuntu-latest
    # This job can be called by other workflows after deployment
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install httpx
    
    - name: Run smoke test
      env:
        HGC_API_URL_DEV: ${{ secrets.HGC_API_URL_DEV }}
        HGC_API_KEY_DEV: ${{ secrets.HGC_API_KEY_DEV }}
      run: |
        python tests/test_integration.py "$HGC_API_URL_DEV" "$HGC_API_KEY_DEV"
    
    - name: Notify on failure
      if: failure()
      run: |
        echo "üö® CRITICAL: Post-deployment smoke test failed!"
        echo "The API deployment may have introduced breaking changes."
        echo "Please investigate immediately."
        exit 1